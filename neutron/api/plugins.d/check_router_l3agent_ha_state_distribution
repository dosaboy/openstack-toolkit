#!/bin/bash -eu
#
# Description:
#  Show distribution of active vs. standby routers for each l3-agent host.
#
#  Run this script from a node that can access the Neutron API. Requires
#  admin credentials.
#
SCRATCH_AREA=`mktemp -d`

cleanup ()
{
    rm -rf $SCRATCH_AREA
}

trap cleanup KILL EXIT INT

. $LIB_PATH/helpers
. $LIB_PATH/openstack_client

## MAIN
echo "Starting Neutron L3HA router agent balance check..."

echo -n " * fetching routers..."
openstack_router_list > $SCRATCH_AREA/routers.json
echo "done."

echo " * found `jq -r '.routers| length' $SCRATCH_AREA/routers.json` routers"

get_info ()
{
    local router_id=$1

    openstack_router_l3agent_list $router_id > $SCRATCH_AREA/$router_id/l3agents.json
    if ! [[ -s $SCRATCH_AREA/$router_id/l3agents.json ]]; then
       echo "WARNING: failed to get l3agent info for router $router_id"
       return
    fi

    readarray -t hosts <<<`jq -r 'try .agents[]| select(.ha_state=="active")| .host' $SCRATCH_AREA/$router_id/l3agents.json`
    if ((${#hosts[@]})) && [ -n "${hosts[0]}" ]; then
        for host in ${hosts[@]}; do
            mkdir -p $SCRATCH_AREA/hosts/$host/active
            ln -s ../../../$router_id $SCRATCH_AREA/hosts/$host/active
        done
    fi

    readarray -t hosts <<<`jq -r 'try .agents[]| select(.ha_state=="standby")| .host' $SCRATCH_AREA/$router_id/l3agents.json`
    if ((${#hosts[@]})) && [ -n "${hosts[0]}" ]; then
        for host in ${hosts[@]}; do
            mkdir -p $SCRATCH_AREA/hosts/$host/standby
            ln -s ../../../$router_id $SCRATCH_AREA/hosts/$host/standby
        done
    fi
}

mkdir -p $SCRATCH_AREA/hosts/
for router_id in `jq -r '.routers[]| select(.ha==true)| select(.admin_state_up==true)| .id' $SCRATCH_AREA/routers.json`; do
    mkdir -p $SCRATCH_AREA/$router_id
    get_info $router_id &
done
wait

echo -e "\nResults:"
(
echo "| Host | Active | Standby |"
for host in `ls $SCRATCH_AREA/hosts`; do
    active=`ls $SCRATCH_AREA/hosts/$host/active 2>/dev/null| wc -l`
    standby=`ls $SCRATCH_AREA/hosts/$host/standby 2>/dev/null| wc -l`
    echo "| $host | $active | $standby |"
done
) | column -t > $SCRATCH_AREA/results
prettytable $SCRATCH_AREA/results

